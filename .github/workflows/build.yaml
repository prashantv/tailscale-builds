name: Build release binaries
on:
 # Trigger manually
 workflow_dispatch:
     inputs:
       version:
         description: "Version fo tailscale to build"
         default: v1.28.0
         required: true

env:
  GOOS: linux
  GOARCH: arm
  GOARM: 5

jobs:
  build:
    name: Build job
    runs-on: ubuntu-latest
    steps:
     - name: Echo input version
       run: 'echo version=${{ inputs.version }}'
     - uses: actions/setup-go@v3
       with:
         go-version: '^1.18.3' # The Go version to download (if necessary) and use.
     - run: go version
     - name: Download tailscale repo
       run: 'curl --location --output tailscale-src.tar.gz https://github.com/tailscale/tailscale/archive/refs/tags/${{ inputs.version }}.tar.gz'
     - name: Extract
       run: 'ls -al && tar xvzf tailscale-src.tar.gz --strip-components 1'
     - name: Build tailscaled without DRAWF
       run: 'mkdir -p build && go build -ldflags="-s -w" -o build/tailscaled-linux-armv5 ./cmd/tailscaled'
     - name: Build tailscale
       run: 'mkdir -p build && go build -ldflags="-s -w" -o build/tailscale-linux-armv5 ./cmd/tailscale'
     - name: List build binaries
       run: 'ls -al build/'
     - name: Create release
       id: create-release
       uses: actions/create-release@v1
       env:
         GITHUB_TOKEN: ${{ github.token }}
       with:
         tag_name: ${{ inputs.version }}
         release_name: ${{ inputs.version }}
         body: Binaries for ${{ inputs.version }}
     - name: Release the binaries
       uses: skx/github-action-publish-binaries@release-2.0
       env:
         GITHUB_TOKEN: ${{ github.token }}
       with:
         releaseId: ${{ steps.create-release.outputs.id }}
         args: build/*





